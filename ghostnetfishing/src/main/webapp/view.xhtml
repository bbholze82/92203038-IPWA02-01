<ui:composition template="snippets/template.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets">

<ui:define name="content">


<div class="container mt-4">

<div class="row">
<div class="col-12">
<h1>View data</h1>
</div>
</div>

<div class="row">
<div class="col-12">
	<div id="map"></div>

<script>

var center = [55.454, 4.504]

const map = L.map('map').setView(center, 5);

const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
	maxZoom: 19,
	attribution: '<a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
	noWrap: true
}).addTo(map);


var greenIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-green.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});

var yellowIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-yellow.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});

var redIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-red.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});

var greyIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-grey.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});


<ui:repeat value="#{ghostNetBean.getAllGhostNets(0)}" var="ghostnet">
   
     var marker = L.marker([<h:outputText value="#{ghostnet.posLatitude}"/>, <h:outputText value="#{ghostnet.posLongitude}"/>], <h:outputText value="#{ghostnet.codeForMarker}"/>); 

     marker.bindPopup("<h:outputText value="#{ghostnet.reportTimestamp}"/>").openPopup();
     
     marker.addTo(map);
     </ui:repeat>


</script>

</div>
</div>

<div class="row mt-2">
<div class="col-6">

<table class="table">

<tr>
<td>
<img class="img-fluid" style="width:25px;" src="./assets/leaflet-color-markers/img/marker-icon-2x-red.png"/>
</td>
<td>#{serverBean.sumEntriesinDBByStatus(1)}</td>
<td>Reported</td>
</tr>

<tr>
<td>
<img class="img-fluid" style="width:25px;" src="./assets/leaflet-color-markers/img/marker-icon-2x-yellow.png"/>
</td>
<td>#{serverBean.sumEntriesinDBByStatus(2)}</td>
<td>Salvage pending</td>
</tr>

<tr>
<td>
<img class="img-fluid" style="width:25px;" src="./assets/leaflet-color-markers/img/marker-icon-2x-green.png"/>
</td>
<td>#{serverBean.sumEntriesinDBByStatus(3)}</td>
<td>Recovered</td>
</tr>

<tr>
<td>
<img class="img-fluid" style="width:25px;" src="./assets/leaflet-color-markers/img/marker-icon-2x-grey.png"/>
</td>
<td>#{serverBean.sumEntriesinDBByStatus(4)}</td>
<td>Missing</td>
</tr>

</table>

</div>
</div>
</div>

</ui:define>

</ui:composition>