<ui:composition template="snippets/template.xhtml"
                xmlns="http://www.w3.org/1999/xhtml"
                xmlns:f="http://xmlns.jcp.org/jsf/core"
                xmlns:h="http://xmlns.jcp.org/jsf/html"
                xmlns:p="http://primefaces.org/ui"
                xmlns:ui="http://xmlns.jcp.org/jsf/facelets">


<ui:define name="content">

<h:panelGroup rendered="#{not loginBean.isLoggedIn}">
<div class="container mt-4">
<div class="alert alert-warning" role="alert">
  
  Please <a href="./login.xhtml">Login</a> to get access.
</div>
</div>
</h:panelGroup>


<h:panelGroup rendered="#{(loginBean.isLoggedIn) and (loginBean.role eq 1 or loginBean.role eq 2)}">

<div class="container mt-4">

<div class="row">
<div class="col-12">
<h1>Hunters view</h1>
</div>
</div>

<div class="row">
<div class="col-12">
<div id="map"></div>

<script>

var center = [55.454, 4.504]

const map = L.map('map').setView(center, 5);

const tiles = L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
	maxZoom: 19,
	attribution: '<a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>',
	noWrap: true
}).addTo(map);


var greenIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-green.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});

var yellowIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-yellow.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});

var redIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-red.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});

var greyIcon = new L.Icon({
	  iconUrl: './assets/leaflet-color-markers/img/marker-icon-2x-grey.png',
	  shadowUrl: './assets/leaflet-color-markers/img//marker-shadow.png',
	  iconSize: [25, 41],
	  iconAnchor: [12, 41],
	  popupAnchor: [1, -34],
	  shadowSize: [41, 41]
});


<ui:repeat value="#{ghostNetBean.getAllGhostNets(2)}" var="ghostnet">
     var marker = L.marker([<h:outputText value="#{ghostnet.posLatitude}"/>, <h:outputText value="#{ghostnet.posLongitude}"/>], <h:outputText value="#{ghostnet.codeForMarker}"/>).addTo(map); 
</ui:repeat>


</script>


</div>
</div>
</div>



<div class="container mt-4">

<div class="row">
<div class="col-12">
<h1>Reported Ghost Nets</h1>
</div>
</div>

<div class="row">
<div class="col-12">
	
<p:dataTable class="table" value="#{ghostNetBean.getAllGhostNets(2)}" var="ghostNet">
<p:column headerText="ID">
<h:outputText value="#{ghostNet.id}" />
</p:column>
 <p:column headerText="Latitude">
<h:outputText value="#{ghostNet.posLatitude}" />
</p:column>
 <p:column headerText="Longitude">
<h:outputText value="#{ghostNet.posLongitude}" />
</p:column>
 <p:column headerText="Size">
<h:outputText value="#{ghostNet.sizeLabel}" />
</p:column>
 <p:column headerText="Status Code">
<h:outputText value="#{ghostNet.statusCodeLabel}" />
</p:column>
 <p:column headerText="Reported By Username">
<h:outputText value="#{ghostNet.reportedByUsername}" />
</p:column>
 <p:column headerText="Salvage Claimed By Username">
<h:outputText value="#{ghostNet.salvageClaimedByUsername}" rendered="#{ghostNet.salvageIsClaimed}" />
</p:column>
 <p:column headerText="Salvage Claimed Timestamp">
<h:outputText value="#{ghostNet.lastEditTimestamp}"/>
</p:column>
 <p:column headerText="Last Edit Timestamp">
<h:outputText value="#{ghostNet.lastEditTimestamp}"/>
</p:column>
<p:column headerText="Actions">
<h:form>
<h:commandButton class="btn btn-primary mt-2" value="Claim salvage" action="#{ghostNet.claimSalvage(loginBean.id)}" rendered="#{ghostNet.statusCode eq 1}" />
<h:commandButton class="btn btn-danger mt-2" value="Cancel salvage" action="#{ghostNet.cancelSalvage(loginBean.id)}" rendered="#{ghostNet.statusCode eq 2 and ghostNet.salvageClaimedByUserId eq loginBean.id}" />
<h:commandButton class="btn btn-success mt-2" value="Mark as recovered" action="#{ghostNet.markAsRecovered(loginBean.id)}" rendered="#{ghostNet.statusCode eq 2 and ghostNet.salvageClaimedByUserId eq loginBean.id}" />
<h:panelGroup rendered="#{ghostNet.statusCode eq 3}">
 <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-check" viewBox="0 0 16 16">
  <path d="M10.97 4.97a.75.75 0 0 1 1.07 1.05l-3.99 4.99a.75.75 0 0 1-1.08.02L4.324 8.384a.75.75 0 1 1 1.06-1.06l2.094 2.093 3.473-4.425z"/>
 </svg>
</h:panelGroup>
  </h:form>
 </p:column>
</p:dataTable>


</div>
</div>
</div>


<div class="container mt-4">
<div class="row">
<div class="col-12">
	<h1>Recovered Ghost Nets</h1>
	
<h:form>
<p:dataTable class="table" value="#{ghostNetBean.getAllGhostNets(3)}" var="ghostNet">
<p:column headerText="ID">
<h:outputText value="#{ghostNet.id}" />
</p:column>
<p:column headerText="Latitude">
<h:outputText value="#{ghostNet.posLatitude}" />
</p:column>
<p:column headerText="Longitude">
<h:outputText value="#{ghostNet.posLongitude}" />
</p:column>
<p:column headerText="Size">
<h:outputText value="#{ghostNet.size}" />
</p:column>
<p:column headerText="Status Code">
<h:outputText value="#{ghostNet.statusCode}" />
</p:column>
<p:column headerText="Reported By Username">
<h:outputText value="#{ghostNet.reportedByUsername}" />
</p:column>
 <p:column headerText="Recovered Timestampp">
<h:outputText value="#{ghostNet.lastEditTimestamp}"/>
</p:column>
</p:dataTable>
</h:form>
    	
</div>
</div>
</div>

</h:panelGroup>



</ui:define>

</ui:composition>