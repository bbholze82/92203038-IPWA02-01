
@startuml
!define Table class
skinparam class {
    BackgroundColor<< Table >> LightYellow
    BorderColor<< Table >> Black
    FontStyle<< Table >> Bold
}
class geonamescache << Table >> {
    int ghostnetid
    varchar name
    int timestamp
}
class ghostnets << Table >> {
    int id
    varchar latitude
    varchar longitude
    int size
}
class ghostnetsizes << Table >> {
    int id
    varchar label
}
class reports << Table >> {
    int id
    int user
    int ghostnet
    int status
    int timestamp
}
class statuscodes << Table >> {
    int id
    varchar label
}
class userdetails << Table >> {
    int userid
    varchar firstname
    varchar lastname
    varchar phonenumber
}
class userroles << Table >> {
    int id
    int role
    varchar label
}
class users << Table >> {
    int id
    int role
    varchar username
    varchar comment
    varchar hashedpassword
    varchar salt
}

geonamescache "0..*" --> "1" ghostnets: ghostnetid
ghostnets "0..*" --> "1" ghostnetsizes: size
reports "0..*" --> "1" users: user
reports "0..*" --> "1" ghostnets: ghostnet
reports "0..*" --> "1" statuscodes: status
userdetails "0..*" --> "1" users: userid
users "0..*" --> "1" userroles: role

class DataController {
    +loginUser()
    +sendNewGhostNetData()
    +sumEntriesInDBByStatus()
    +getAllRecoveredGhostNetsByUserId()
    +getGhostNetBeanById()
    +getAllGhostNets()
    +getAttributesFromDBUsers()
    +createReportForGhostNet()
    +getSnippetForMapMarker()
    +getLatestGhostNetId()
    +getReportsByUserId()
    +getLabelById()
    +getCurrentUnixTime()
    +getDurationHumanReadable()
    +getLabelForPositionFromCache()
    +getLabelForPositionFromService()
    +saveGeoNameResultToCache()
    +getGhostNetsByStatusId()
}
class DataService {
    +login()
    +getGhostNetBeanById()
    +getAllRecoveredGhostNetsByUserId()
    +getGhostNetsByStatusId()
    +getAllGhostNets()
    +getReportBeanForGhostNet()
    +createReportForGhostNet()
    +sendNewGhostNetData()
    +getAttributesFromDBUsers()
    +sumEntriesInDBByStatus()
    +getDurationHumanReadable()
    +getReportsByUserId()
    +getLatestGhostNetId()
    +getLabelById()
    +encodeUnixTimestampHumanReadable()
    +getCurrentUnixTime()
    +getSnippetForMapMarker()
}
class DataServiceGeoNames {
    +getPositionLabelFromService()
    +getLabelForPositionFromCache()
    +saveGeoNameResultToCache()
    +getCurrentUnixTime()
}
class GhostNetBean {
    +getId()
    +setId()
    +getPosLatitude()
    +setPosLatitude()
    +getPosLongitude()
    +setPosLongitude()
    +getSize()
    +setSize()
    +getAllGhostNets()
    +getGhostNetsByStatusId()
    +getGhostNetsReportedMissing()
    +submitData()
    +getFirstReportBean()
    +setFirstReportBean()
    +getLatestReportBean()
    +setLatestReportBean()
    +createReport()
    +getSnippetForMapMarker()
    +getLatestId()
    +setStatusToReported()
    +setStatusToSalvagePending()
    +Recovered()
    +setStatusToReportedMissing()
    +setStatusToMissing()
    +getSizeLabel()
    +getAgeOfReport()
    +getReportsByUserId()
    +getLabelForPosition()
    +getAllActiveGhostNets()
    +getAllRecoveredGhostNetsByUserId()
    +getDetailsForMapMarker()
    +getViewDetailsLink()
}
class LoginBean {
    +getUsername()
    +setUsername()
    +getErrorMessage()
    +setErrorMessage()
    +getIsLoggedIn()
    +setIsLoggedIn()
    +login()
    +logout()
    +getRole()
    +getRoleLabel()
    +setRole()
    +getFirstname()
    +setFirstname()
    +getLastname()
    +setLastname()
    +getId()
    +setId()
    +getPhonenumber()
    +setPhonenumber()
    +setHashedPassword()
    +getHashedPassword()
    +setSalt()
    +getSalt()
    +setUsedPassword()
    +getUsedPassword()
    +cleanUpUsedPassword()
    +getAdminPrivileges()
    +setAdminPrivileges()
}
class ReportBean {
    +getId()
    +setId()
    +getUserId()
    +setUserId()
    +getUserNameLabel()
    +setUserNameLabel()
    +getGhostNetId()
    +setGhostNetId()
    +getStatusId()
    +setStatusId()
    +getTimestamp()
    +setTimestamp()
    +getTimestampLabel()
    +setTimestampLabel()
    +getStatusLabel()
    +getAgeOfReport()
}
class ServerBean {
    +getStartTime()
    +setRequestCounterUpByOne()
    +getRequestCounter()
    +sumEntriesinDBByStatus()
    +getDebugMode()
    +setDebugMode()
}
class StatisticBean {
    +getGhostNetsInDB()
    +getGhostNetsWithStatusReported()
    +getGhostNetsWithStatusSalvagePending()
    +getGhostNetsWithStatusRecovered()
    +getGhostNetsWithStatusReportedMissing()
    +getGhostNetsWithStatusMissing()
}

DataController --> DataService: uses
DataController --> DataServiceGeoNames: uses
DataController --> GhostNetBean: uses
DataController --> ReportBean: uses
DataController --> ServerBean: uses
DataController --> StatisticBean: uses
DataController --> LoginBean: uses
@enduml
